#面向过程
以函数为中心
结构化
数据公开

##问题和局限：
函数与数据链接大
全局数据改动导致函数全部重写
数据与函数分离
很难做到高内聚低耦合
软件编写复杂
软件开发维护难



#面向对象


##基本思想：

将世界看成由不同种类的对象构成
每个对象有自己的属性和方法
对象间可以交互


##设计过程：

抽象出一个个类
分析类的结构（属性和方法）
定义不同类的对象
在对象之间发消息
最终完成要求

##类和对象

对象是类的具体描述
对象代表一个子问题
包括数据（成员属性）
方法（成员方法）


类是对象的描述，抽象
规定成员属性
成员方法
定义属性和方法的可见性

##类的定义

class 类名{
    private:
	//私有数据方法
    public:
	//公有数据和方法
    protected:
	//保护数据方法
}

##公有成员
定义类的外部接口
任何部分都可以访问

##私有成员
数据私有化
只能被类自身成员函数
默认私有

##保护成员
对内可以被子类成员函数
直接或间接访问
对外私有不可访问

对象间的函数是公有的
每个对象都可以调用同一函数
通过this指针区分不同对象的属性



##类界面和类实现

类界面放在xxx.h
类实现放在xxx.cpp

在xxx.cpp中
#include<xxx.h>

在main.cpp中
#include<xxx.h>
即可在main文件中使用该类


